#!/bin/bash

echo "üîß CORRE√á√ÉO AUTOM√ÅTICA DO PROBLEMA DE LOGIN"
echo "============================================"
echo

# 1. Verificar se containers est√£o rodando
echo "üìä 1. Verificando status dos containers..."
docker-compose ps
echo

# 2. Verificar logs de erro
echo "üìã 2. Verificando logs da aplica√ß√£o..."
docker-compose logs --tail=20 app | grep -i error || echo "Nenhum erro √≥bvio encontrado nos logs"
echo

# 3. Testar conectividade da API
echo "üîå 3. Testando conectividade da API..."
API_HEALTH=$(curl -s http://localhost:3000/api/health 2>/dev/null)
if [[ $? -eq 0 ]]; then
    echo "‚úÖ API est√° respondendo: $API_HEALTH"
else
    echo "‚ùå API n√£o est√° respondendo"
    echo "   Verifique se o container da aplica√ß√£o est√° rodando"
    exit 1
fi
echo

# 4. Recriar usu√°rio admin no banco
echo "üîß 4. Recriando usu√°rio admin no banco..."
docker-compose exec -T postgres psql -U imobiliaria_user -d sistema_imobiliario << 'EOF'
-- Remover usu√°rio admin se existir
DELETE FROM usuarios WHERE email = 'admin@imobiliaria.com';

-- Criar usu√°rio admin com senha correta (123456)
INSERT INTO usuarios (nome, email, senha, tipo_usuario, ativo) VALUES (
    'Administrador Sistema',
    'admin@imobiliaria.com', 
    '$2a$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LeZJGlrC1QjGO/K2e',
    'admin',
    true
);

-- Verificar se foi criado
SELECT id, nome, email, tipo_usuario, ativo FROM usuarios WHERE email = 'admin@imobiliaria.com';
EOF

echo "‚úÖ Usu√°rio admin recriado"
echo

# 5. Testar login via API
echo "üß™ 5. Testando login via API..."
LOGIN_RESULT=$(curl -s -X POST http://localhost:3000/api/auth/login   -H "Content-Type: application/json"   -d '{"email":"admin@imobiliaria.com","senha":"123456"}' 2>/dev/null)

if echo "$LOGIN_RESULT" | grep -q '"success":true'; then
    echo "‚úÖ Login funcionando! Resposta da API:"
    echo "$LOGIN_RESULT" | jq . 2>/dev/null || echo "$LOGIN_RESULT"
else
    echo "‚ùå Login ainda n√£o funcionando. Resposta da API:"
    echo "$LOGIN_RESULT"
    echo
    echo "üîç Analisando poss√≠vel causa..."

    # Verificar se √© problema de CORS
    if echo "$LOGIN_RESULT" | grep -q "CORS\|cors"; then
        echo "‚ùå Poss√≠vel problema de CORS"
    elif echo "$LOGIN_RESULT" | grep -q "500"; then
        echo "‚ùå Erro interno do servidor"
    elif echo "$LOGIN_RESULT" | grep -q "404"; then
        echo "‚ùå Rota n√£o encontrada"
    else
        echo "‚ùå Erro desconhecido"
    fi
fi
echo

# 6. Reiniciar aplica√ß√£o
echo "üîÑ 6. Reiniciando aplica√ß√£o..."
docker-compose restart app
sleep 5
echo "‚úÖ Aplica√ß√£o reiniciada"
echo

echo "üéâ CORRE√á√ÉO CONCLU√çDA!"
echo "Tente fazer login novamente em: http://seu-ip:3000"
echo "Credenciais: admin@imobiliaria.com / 123456"
